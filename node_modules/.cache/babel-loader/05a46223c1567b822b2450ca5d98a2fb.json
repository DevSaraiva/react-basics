{"ast":null,"code":"var _jsxFileName = \"/home/saraiva/Desktop/React JS/react-advanced-2020/src/tutorial/3-conditional-rendering/setup/1-multiple-returns.js\";\nimport React, { useState, useEffect } from 'react';\nconst url = 'https://api.github.com/users/QuincyLarson';\n\nconst MultipleReturns = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [user, setUser] = useState('default user');\n\n  const getUser = async () => {\n    const response = await fetch(url).then(res => {\n      if (res.status >= 200 && response.status <= 299) return res.json();else {\n        setIsLoading(false);\n        setIsError(true);\n      }\n    }).then(user => {\n      const {\n        login\n      } = user;\n      setUser(login);\n      setIsLoading(false);\n    }).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n  if (isLoading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }, \"it's loading...\"));\n  if (isError) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }\n  }, \"error...\"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, user));\n};\n\nexport default MultipleReturns;","map":{"version":3,"sources":["/home/saraiva/Desktop/React JS/react-advanced-2020/src/tutorial/3-conditional-rendering/setup/1-multiple-returns.js"],"names":["React","useState","useEffect","url","MultipleReturns","isLoading","setIsLoading","isError","setIsError","user","setUser","getUser","response","fetch","then","res","status","json","login","catch","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,MAAMC,GAAG,GAAG,2CAAZ;;AACA,MAAMC,eAAe,GAAG,MAAM;AAE5B,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BL,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM,CAACM,OAAD,EAASC,UAAT,IAAuBP,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,cAAD,CAAhC;;AAIA,QAAMU,OAAO,GAAG,YAAW;AACzB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAD,CAAL,CACvBW,IADuB,CACjBC,GAAD,IAAS;AACZ,UAAGA,GAAG,CAACC,MAAJ,IAAc,GAAd,IAAqBJ,QAAQ,CAACI,MAAT,IAAmB,GAA3C,EAAgD,OAAOD,GAAG,CAACE,IAAJ,EAAP,CAAhD,KACI;AACFX,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,KAPsB,EAQtBM,IARsB,CAQjBL,IAAI,IAAI;AACZ,YAAM;AAACS,QAAAA;AAAD,UAAUT,IAAhB;AACAC,MAAAA,OAAO,CAACQ,KAAD,CAAP;AACAZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAZsB,EAatBa,KAbsB,CAafC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAbK,CAAvB;AAeD,GAhBD;;AAkBAlB,EAAAA,SAAS,CAAC,MAAI;AACZS,IAAAA,OAAO;AACR,GAFQ,EAEP,EAFO,CAAT;AAOA,MAAGN,SAAH,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAL,CAAP;AAGd,MAAGE,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAL,CAAP;AAGZ,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IADH,CADF,CADF;AAOD,CA9CD;;AAgDA,eAAeL,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nconst url = 'https://api.github.com/users/QuincyLarson';\nconst MultipleReturns = () => {\n  \n  const [isLoading,setIsLoading] = useState(true);\n  const [isError,setIsError] = useState(false);\n  const [user, setUser] = useState('default user');\n\n  \n\n  const getUser = async() => {\n    const response = await fetch(url).\n    then((res) => {\n      if(res.status >= 200 && response.status <= 299) return res.json();\n      else{\n        setIsLoading(false);\n        setIsError(true);\n      }\n    })\n    .then(user => {\n      const {login} = user;\n      setUser(login);\n      setIsLoading(false);\n    })\n    .catch((error) => console.log(error));\n      \n  }\n\n  useEffect(()=>{\n    getUser();\n  },[])\n\n\n\n\n  if(isLoading) return <div><h1>it's loading...</h1></div>\n  \n  \n  if(isError) return <div><h2>error...</h2></div>\n\n\n  return (\n    <div>\n      <h1>\n        {user}\n      </h1>\n    </div>\n  )\n};\n\nexport default MultipleReturns;\n"]},"metadata":{},"sourceType":"module"}