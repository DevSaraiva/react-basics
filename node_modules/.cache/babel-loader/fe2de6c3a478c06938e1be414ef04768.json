{"ast":null,"code":"var _jsxFileName = \"/home/saraiva/Desktop/React JS/react-advanced-2020/src/tutorial/2-useEffect/setup/2-useEffect-cleanup.js\";\nimport React, { useState, useEffect } from 'react'; // cleanup function\n// second argument\n\nconst UseEffectCleanup = () => {\n  const [size, setSize] = useState(window.innerWidth);\n  console.log(size);\n\n  const checkSize = () => {\n    setSize(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', checkSize);\n    window.removeEventListener('resize', checkSize);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, \"Window\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, size, \" px\"));\n};\n\nexport default UseEffectCleanup;","map":{"version":3,"sources":["/home/saraiva/Desktop/React JS/react-advanced-2020/src/tutorial/2-useEffect/setup/2-useEffect-cleanup.js"],"names":["React","useState","useEffect","UseEffectCleanup","size","setSize","window","innerWidth","console","log","checkSize","addEventListener","removeEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;AACA;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBJ,QAAQ,CAACK,MAAM,CAACC,UAAR,CAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AAEF,QAAMM,SAAS,GAAG,MAAM;AACtBL,IAAAA,OAAO,CAACC,MAAM,CAACC,UAAR,CAAP;AACD,GAFD;;AAIAL,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAiCD,SAAjC;AACAJ,IAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAoCF,SAApC;AACD,GAHQ,CAAT;AAIE,sBAAO,uDAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFK,eAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,IAAL,QAHK,CAAP;AAMD,CAlBD;;AAoBA,eAAeD,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// cleanup function\n// second argument\n\nconst UseEffectCleanup = () => {\n  const [size,setSize] = useState(window.innerWidth);\n  console.log(size);\n  \nconst checkSize = () => {\n  setSize(window.innerWidth)\n}\n\nuseEffect(()=>{\n  window.addEventListener('resize',checkSize);\n  window.removeEventListener('resize',checkSize)\n})\n  return <>\n\n    <h1>Window</h1>\n    <h2>{size} px</h2>\n  \n  </>;\n};\n\nexport default UseEffectCleanup;\n"]},"metadata":{},"sourceType":"module"}