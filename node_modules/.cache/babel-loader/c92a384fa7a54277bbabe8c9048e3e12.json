{"ast":null,"code":"export const reducer = (state, action) => {\n  const newPeople = [...state.people, action.payload];\n\n  if (action.type == 'ADD_ITEM') {\n    return { ...state,\n      people: newPeople,\n      isModalOpen: true,\n      modalContent: 'item added'\n    };\n  }\n\n  if (action.type == 'NO_VALUE') {\n    return { ...state,\n      isModalOpen: true,\n      modalContent: 'pls enter a valid value'\n    };\n  }\n\n  if (action.type == 'CLOSE_MODEL') {\n    return { ...state,\n      isModalOpen: false\n    };\n  }\n\n  if (action.type == 'REMOVE_ITEM') {\n    const newPeople = state.people.filter(person => person.id != action.payload);\n    return { ...state,\n      people: newPeople,\n      isModalOpen: true,\n      modalContent: 'item removed'\n    };\n  }\n\n  throw new Error('no matching action type');\n};","map":{"version":3,"sources":["/home/saraiva/Desktop/React JS/react-advanced-2020/src/tutorial/6-useReducer/setup/reducer.js"],"names":["reducer","state","action","newPeople","people","payload","type","isModalOpen","modalContent","filter","person","id","Error"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACnC,QAAMC,SAAS,GAAG,CAAC,GAAGF,KAAK,CAACG,MAAV,EAAiBF,MAAM,CAACG,OAAxB,CAAlB;;AACF,MAAGH,MAAM,CAACI,IAAP,IAAe,UAAlB,EAA6B;AAC3B,WAAO,EAAC,GAAGL,KAAJ;AACLG,MAAAA,MAAM,EAAED,SADH;AAELI,MAAAA,WAAW,EAAC,IAFP;AAGLC,MAAAA,YAAY,EAAE;AAHT,KAAP;AAKD;;AAED,MAAGN,MAAM,CAACI,IAAP,IAAe,UAAlB,EAA6B;AAC3B,WAAO,EAAC,GAAGL,KAAJ;AACLM,MAAAA,WAAW,EAAE,IADR;AAELC,MAAAA,YAAY,EAAE;AAFT,KAAP;AAID;;AAED,MAAGN,MAAM,CAACI,IAAP,IAAe,aAAlB,EAAgC;AAC9B,WAAO,EAAC,GAAGL,KAAJ;AAAUM,MAAAA,WAAW,EAAE;AAAvB,KAAP;AACD;;AAED,MAAGL,MAAM,CAACI,IAAP,IAAe,aAAlB,EAAgC;AAC9B,UAAMH,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaK,MAAb,CAAqBC,MAAD,IAAYA,MAAM,CAACC,EAAP,IAAaT,MAAM,CAACG,OAApD,CAAlB;AACA,WAAO,EAAC,GAAGJ,KAAJ;AACPG,MAAAA,MAAM,EAAED,SADD;AAEPI,MAAAA,WAAW,EAAC,IAFL;AAGPC,MAAAA,YAAY,EAAE;AAHP,KAAP;AAID;;AAEC,QAAM,IAAII,KAAJ,CAAU,yBAAV,CAAN;AACH,CA9BI","sourcesContent":["export const reducer = (state,action) => {\n      const newPeople = [...state.people,action.payload];\n    if(action.type == 'ADD_ITEM'){\n      return {...state,\n        people: newPeople,\n        isModalOpen:true,\n        modalContent: 'item added'\n      };\n    }\n\n    if(action.type == 'NO_VALUE'){\n      return {...state,\n        isModalOpen: true,\n        modalContent: 'pls enter a valid value'\n      }\n    }\n\n    if(action.type == 'CLOSE_MODEL'){\n      return {...state,isModalOpen: false}\n    }\n\n    if(action.type == 'REMOVE_ITEM'){\n      const newPeople = state.people.filter((person) => person.id != action.payload);\n      return {...state,\n      people: newPeople,\n      isModalOpen:true,\n      modalContent: 'item removed'}\n    }\n\n      throw new Error('no matching action type');\n  }\n"]},"metadata":{},"sourceType":"module"}