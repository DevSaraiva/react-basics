{"ast":null,"code":"var _jsxFileName = \"/home/saraiva/Desktop/React JS/react-advanced-2020/src/tutorial/6-useReducer/setup/index.js\";\nimport React, { useState, useReducer } from 'react';\nimport Modal from './Modal';\nimport { data } from '../../../data'; // reducer function\n\nconst Index = () => {\n  const reducer = (state, action) => {\n    const newPeople = [...state.people, action.payload];\n\n    if (action.type == 'ADD_ITEM') {\n      return { ...state,\n        people: newPeople,\n        isModalOpen: true,\n        modalContent: 'item added'\n      };\n    }\n\n    if (action.type == 'NO_VALUE') {\n      return { ...state,\n        isModalOpen: true,\n        modalContent: 'pls enter a valid value'\n      };\n    }\n\n    if (action.type == 'CLOSE_MODEL') {\n      return { ...state,\n        isModalOpen: false\n      };\n    }\n\n    if (action.type == 'REMOVE_ITEM') {\n      const newPeople = state.people.filter(person => person.id != action.payload);\n    }\n\n    throw new Error('no matching action type');\n  };\n\n  const defaultState = {\n    people: [],\n    isModalOpen: false,\n    modalContent: 'hello world'\n  };\n  const [name, setName] = useState('');\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  const closeModal = () => {\n    dispatch({\n      type: 'CLOSE_MODEL'\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name) {\n      const newItem = {\n        id: new Date().getTime().toString(),\n        name\n      };\n      dispatch({\n        type: 'ADD_ITEM',\n        payload: newItem\n      });\n      setName('');\n    } else {\n      dispatch({\n        type: 'NO_VALUE'\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, state.isModalOpen && /*#__PURE__*/React.createElement(Modal, {\n    closeModal: closeModal,\n    modelContent: state.modalContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, \"Add\")), state.people.map(person => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item\",\n      key: person.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, person.name), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: () => dispatch({\n        type: 'REMOVE_ITEM',\n        payload: person.id\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"remove\"));\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/saraiva/Desktop/React JS/react-advanced-2020/src/tutorial/6-useReducer/setup/index.js"],"names":["React","useState","useReducer","Modal","data","Index","reducer","state","action","newPeople","people","payload","type","isModalOpen","modalContent","filter","person","id","Error","defaultState","name","setName","dispatch","closeModal","handleSubmit","e","preventDefault","newItem","Date","getTime","toString","target","value","map"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from 'react';\nimport Modal from './Modal';\nimport { data } from '../../../data';\n// reducer function\n\nconst Index = () => {\n  \n  const reducer = (state,action) => {\n      const newPeople = [...state.people,action.payload];\n    if(action.type == 'ADD_ITEM'){\n      return {...state,\n        people: newPeople,\n        isModalOpen:true,\n        modalContent: 'item added'\n      };\n    }\n\n    if(action.type == 'NO_VALUE'){\n      return {...state,\n        isModalOpen: true,\n        modalContent: 'pls enter a valid value'\n      }\n    }\n\n    if(action.type == 'CLOSE_MODEL'){\n      return {...state,isModalOpen: false}\n    }\n\n    if(action.type == 'REMOVE_ITEM'){\n      const newPeople = state.people.filter((person) => person.id != action.payload);\n    }\n\n      throw new Error('no matching action type');\n  }\n\n\n  const defaultState = {\n    people: [],\n    isModalOpen:false,\n    modalContent: 'hello world'\n\n  }\n\n  const [name,setName] = useState('');\n  const [state,dispatch] = useReducer(reducer,defaultState);\n    \n\n  const closeModal = () => {\n    dispatch({type:'CLOSE_MODEL'});\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(name){\n      const newItem = {id: new Date().getTime().toString(),name}\n      dispatch({type:'ADD_ITEM', payload:newItem});\n      setName('');\n    }else{\n      dispatch({type:'NO_VALUE'});\n      \n  }\n}\n  \n  return <>\n  \n  {state.isModalOpen && <Modal closeModal = {closeModal} modelContent={state.modalContent}/>}\n  <form onSubmit={handleSubmit} className='form'>\n    <div>\n\n      <input type=\"text\" value={name}  onChange={(e) => setName(e.target.value)}/>\n    </div>\n\n    <button type=\"submit\">Add</button>\n\n  </form>\n  \n  {\n    state.people.map((person) => {\n      return(\n        <div className='item' key={person.id}>\n          <h3>{person.name}</h3>\n          <button className='btn' onClick={() => dispatch({type:'REMOVE_ITEM', payload:person.id})}>remove</button>\n        </div>\n      )\n    })\n  }\n\n  </>;\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}